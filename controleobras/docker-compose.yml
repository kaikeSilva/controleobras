version: '3.8'

services:
  # Laravel Application (PHP-FPM)
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    volumes:
      - ./backend:/var/www
    ports:
      - "8081:8000"
    depends_on:
      - db
      - redis
    networks:
      - app-network
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=postgres
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: bash -c "cd /var/www && composer install && cp -n .env.example .env && php artisan key:generate && php artisan serve --host=0.0.0.0 --port=8000"

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8081/api
      - VITE_APP_TITLE=Laravel Vue App (Development)
    networks:
      - app-network
    command: npm run dev -- --host

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=laravel
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
