openapi: 3.0.3
info:
  title: API de Autenticação
  description: Endpoints de autenticação (registro, login, logout)
  version: 1.0.0
servers:
  - url: http://localhost/api
paths:
  /register:
    post:
      summary: Registra um novo usuário
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '422':
          description: Dados inválidos
  /login:
    post:
      summary: Autentica um usuário e retorna o token
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Credenciais inválidas
        '422':
          description: Dados inválidos
  /logout:
    post:
      summary: Logout do usuário autenticado
      tags:
        - Autenticação
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logout realizado com sucesso
        '401':
          description: Não autenticado
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          example: Maria Souza
        email:
          type: string
          example: maria@exemplo.com
        password:
          type: string
          example: senha1234
        password_confirmation:
          type: string
          example: senha1234
      required:
        - name
        - email
        - password
        - password_confirmation
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: maria@exemplo.com
        password:
          type: string
          example: senha1234
      required:
        - email
        - password
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          example: 1|Xyz...token...Aqui
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Maria Souza
        email:
          type: string
          example: maria@exemplo.com
        created_at:
          type: string
          format: date-time
          example: '2025-05-23T15:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-05-23T15:00:00Z'
